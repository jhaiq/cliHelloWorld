<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace命名空间特殊作用： 如果使用mapper动态代理方法，这里就需要配置mapper接口地址-->
<!--
    id：resultMap的唯一标识
    type：将查询出的数据放入到指定对象中
    注意：手动映射需要指定数据库中表的字段名与java中pojo类的属性名称对应关系
 -->
<mapper namespace="com.ssm.mapper.User2Mapper">
    <resultMap type="com.ssm.model.Orders" id="orderAndUserResultMap">
        <!--
               id：指定主键字段对应关系
               column：列，数据库中的字段名称
               property：属性，pojo的属性名称
            -->
        <id column="id" property="id"/>
        <!-- result：指定非主键字段的对应关系 -->
        <result column="user_id" property="userId"/>
        <result column="number" property="number"/>
        <result column="create_time" property="createtime"/>
        <result column="note" property="note"/>
        <!-- 指定单个对象的对应关系
               property：指定将数据放入Orders中的user属性中
               javaType：user属性的类型
            -->
        <association property="user" javaType="com.ssm.model.User2">
            <id column="id" property="id"/>
            <result column="username" property="username"/>
            <result column="sex" property="sex"/>
            <result column="birthday" property="birthday"/>
            <result column="address" property="address"/>
        </association>

    </resultMap>

    <select id="findOrdersAndUser2" resultMap="orderAndUserResultMap">
        select a.*,b.id uid,username,birthday,sex,address
        from orders a, user2 b
        where a.user_id = b.id
</select>

    <resultMap type="com.ssm.model.User2" id="userAndOrdersResultMap">
        <id column="id" property="id"/>
        <result column="birthday" property="birthday"/>
        <result column="username" property="username"/>
        <result column="sex" property="sex"/>
        <result column="address" property="address"/>
        <!-- 指定对应的集合对象关系映射
            property：将数据放入user对象中的ordersList中
            ofType：指定ordersList属性的泛型类型
         -->
        <collection property="orderList" ofType="com.ssm.model.Orders">
            <id column="oid" property="id"/>
            <result column="user_id" property="userId"/>
            <result column="number" property="number"/>
            <result column="create_time" property="createtime"/>
        </collection>
    </resultMap>

    <select id="findUserAndOrders" resultMap="userAndOrdersResultMap">
        SELECT a.*,b.id oid,user_id,'number',create_time
        FROM user2 a,orders b WHERE a.id=b.user_id
</select>


</mapper>